((:name "collision" :functions ((:return-type "void" :name "dGeomDestroy" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomSetData" :args ((:type "dGeomID" :name "geom") (:type (:pointer "void") :name "data"))) (:return-type (:pointer "void") :name "dGeomGetData" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomSetBody" :args ((:type "dGeomID" :name "geom") (:type "dBodyID" :name "body"))) (:return-type "dBodyID" :name "dGeomGetBody" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomSetPosition" :args ((:type "dGeomID" :name "geom") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dGeomSetRotation" :args ((:type "dGeomID" :name "geom") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dGeomSetQuaternion" :args ((:type "dGeomID" :name "geom") (:type "dQuaternion" :name "Q"))) (:return-type (:pointer "dReal") :name "dGeomGetPosition" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomCopyPosition" :args ((:type "dGeomID" :name "geom") (:type "dVector3" :name "pos"))) (:return-type (:pointer "dReal") :name "dGeomGetRotation" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomCopyRotation" :args ((:type "dGeomID" :name "geom") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dGeomGetQuaternion" :args ((:type "dGeomID" :name "geom") (:type "dQuaternion" :name "result"))) (:return-type "void" :name "dGeomGetAABB" :args ((:type "dGeomID" :name "geom") (:type (:pointer "dReal") :name "aabb"))) (:return-type "int" :name "dGeomIsSpace" :args ((:type "dGeomID" :name "geom"))) (:return-type "dSpaceID" :name "dGeomGetSpace" :args ((:type "dGeomID"))) (:return-type "int" :name "dGeomGetClass" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomSetCategoryBits" :args ((:type "dGeomID" :name "geom") (:type "unsigned long" :name "bits"))) (:return-type "void" :name "dGeomSetCollideBits" :args ((:type "dGeomID" :name "geom") (:type "unsigned long" :name "bits"))) (:return-type "unsigned long" :name "dGeomGetCategoryBits" :args ((:type "dGeomID"))) (:return-type "unsigned long" :name "dGeomGetCollideBits" :args ((:type "dGeomID"))) (:return-type "void" :name "dGeomEnable" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomDisable" :args ((:type "dGeomID" :name "geom"))) (:return-type "int" :name "dGeomIsEnabled" :args ((:type "dGeomID" :name "geom"))) (:return-type "int" :name "dGeomLowLevelControl" :args ((:type "dGeomID" :name "geom") (:type "int" :name "controlClass") (:type "int" :name "controlCode") (:type (:pointer "void") :name "dataValue") (:type (:pointer "int") :name "dataSize"))) (:return-type "void" :name "dGeomGetRelPointPos" :args nil) (:return-type "void" :name "dGeomGetPosRelPoint" :args nil) (:return-type "void" :name "dGeomVectorToWorld" :args nil) (:return-type "void" :name "dGeomVectorFromWorld" :args nil) (:return-type "void" :name "dGeomSetOffsetPosition" :args ((:type "dGeomID" :name "geom") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dGeomSetOffsetRotation" :args ((:type "dGeomID" :name "geom") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dGeomSetOffsetQuaternion" :args ((:type "dGeomID" :name "geom") (:type "dQuaternion" :name "Q"))) (:return-type "void" :name "dGeomSetOffsetWorldPosition" :args ((:type "dGeomID" :name "geom") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dGeomSetOffsetWorldRotation" :args ((:type "dGeomID" :name "geom") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dGeomSetOffsetWorldQuaternion" :args ((:type "dGeomID" :name "geom") (:type "dQuaternion"))) (:return-type "void" :name "dGeomClearOffset" :args ((:type "dGeomID" :name "geom"))) (:return-type "int" :name "dGeomIsOffset" :args ((:type "dGeomID" :name "geom"))) (:return-type (:pointer "dReal") :name "dGeomGetOffsetPosition" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomCopyOffsetPosition" :args ((:type "dGeomID" :name "geom") (:type "dVector3" :name "pos"))) (:return-type (:pointer "dReal") :name "dGeomGetOffsetRotation" :args ((:type "dGeomID" :name "geom"))) (:return-type "void" :name "dGeomCopyOffsetRotation" :args ((:type "dGeomID" :name "geom") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dGeomGetOffsetQuaternion" :args ((:type "dGeomID" :name "geom") (:type "dQuaternion" :name "result"))) (:return-type "int" :name "dCollide" :args ((:type "dGeomID" :name "o1") (:type "dGeomID" :name "o2") (:type "int" :name "flags") (:type (:pointer "dContactGeom") :name "contact") (:type "int" :name "skip"))) (:return-type "void" :name "dSpaceCollide" :args ((:type "dSpaceID" :name "space") (:type (:pointer "void") :name "data") (:type (:pointer "dNearCallback") :name "callback"))) (:return-type "void" :name "dSpaceCollide2" :args ((:type "dGeomID" :name "space1") (:type "dGeomID" :name "space2") (:type (:pointer "void") :name "data") (:type (:pointer "dNearCallback") :name "callback"))) (:return-type "dGeomID" :name "dCreateSphere" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "radius"))) (:return-type "void" :name "dGeomSphereSetRadius" :args ((:type "dGeomID" :name "sphere") (:type "dReal" :name "radius"))) (:return-type "dReal" :name "dGeomSphereGetRadius" :args ((:type "dGeomID" :name "sphere"))) (:return-type "dReal" :name "dGeomSpherePointDepth" :args ((:type "dGeomID" :name "sphere") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "dGeomID" :name "dCreateConvex" :args ((:type "dSpaceID" :name "space") (:type (:pointer "dReal") :name "_planes") (:type "unsigned int" :name "_planecount") (:type (:pointer "dReal") :name "_points") (:type "unsigned int" :name "_pointcount") (:type (:pointer "unsigned int") :name "_polygons"))) (:return-type "void" :name "dGeomSetConvex" :args ((:type "dGeomID" :name "g") (:type (:pointer "dReal") :name "_planes") (:type "unsigned int" :name "_count") (:type (:pointer "dReal") :name "_points") (:type "unsigned int" :name "_pointcount") (:type (:pointer "unsigned int") :name "_polygons"))) (:return-type "dGeomID" :name "dCreateBox" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "lx") (:type "dReal" :name "ly") (:type "dReal" :name "lz"))) (:return-type "void" :name "dGeomBoxSetLengths" :args ((:type "dGeomID" :name "box") (:type "dReal" :name "lx") (:type "dReal" :name "ly") (:type "dReal" :name "lz"))) (:return-type "void" :name "dGeomBoxGetLengths" :args ((:type "dGeomID" :name "box") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dGeomBoxPointDepth" :args ((:type "dGeomID" :name "box") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "dGeomID" :name "dCreatePlane" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "a") (:type "dReal" :name "b") (:type "dReal" :name "c") (:type "dReal" :name "d"))) (:return-type "dGeomID" :name "dCreateCapsule" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "radius") (:type "dReal" :name "length"))) (:return-type "dGeomID" :name "dCreateCylinder" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "radius") (:type "dReal" :name "length"))) (:return-type "dGeomID" :name "dCreateRay" :args ((:type "dSpaceID" :name "space") (:type "dReal" :name "length"))) (:return-type "void" :name "dGeomRaySetParams" :args ((:type "dGeomID" :name "g") (:type "int" :name "FirstContact") (:type "int" :name "BackfaceCull"))) (:return-type "dGeomID" :name "dCreateGeomTransform" :args ((:type "dSpaceID" :name "space"))) (:return-type "dGeomID" :name "dCreateHeightfield" :args ((:type "dSpaceID" :name "space") (:type "dHeightfieldDataID" :name "data") (:type "int" :name "bPlaceable"))) (:return-type "dHeightfieldDataID" :name "dGeomHeightfieldDataCreate" :args nil) (:return-type "void" :name "dGeomHeightfieldDataDestroy" :args ((:type "dHeightfieldDataID" :name "d"))) (:return-type "void" :name "dGeomHeightfieldDataBuildCallback" :args ((:type "dHeightfieldDataID" :name "d") (:type (:pointer "void") :name "pUserData") (:type (:pointer "dHeightfieldGetHeight") :name "pCallback") (:type "dReal" :name "width") (:type "dReal" :name "depth") (:type "int" :name "widthSamples") (:type "int" :name "depthSamples") (:type "dReal" :name "scale") (:type "dReal" :name "offset") (:type "dReal" :name "thickness") (:type "int" :name "bWrap"))) (:return-type "void" :name "dGeomHeightfieldDataBuildByte" :args ((:type "dHeightfieldDataID" :name "d") (:type (:pointer "unsigned char") :name "pHeightData") (:type "int" :name "bCopyHeightData") (:type "dReal" :name "width") (:type "dReal" :name "depth") (:type "int" :name "widthSamples") (:type "int" :name "depthSamples") (:type "dReal" :name "scale") (:type "dReal" :name "offset") (:type "dReal" :name "thickness") (:type "int" :name "bWrap"))) (:return-type "void" :name "dGeomHeightfieldDataBuildShort" :args ((:type "dHeightfieldDataID" :name "d") (:type (:pointer "short") :name "pHeightData") (:type "int" :name "bCopyHeightData") (:type "dReal" :name "width") (:type "dReal" :name "depth") (:type "int" :name "widthSamples") (:type "int" :name "depthSamples") (:type "dReal" :name "scale") (:type "dReal" :name "offset") (:type "dReal" :name "thickness") (:type "int" :name "bWrap"))) (:return-type "void" :name "dGeomHeightfieldDataBuildSingle" :args ((:type "dHeightfieldDataID" :name "d") (:type (:pointer "float") :name "pHeightData") (:type "int" :name "bCopyHeightData") (:type "dReal" :name "width") (:type "dReal" :name "depth") (:type "int" :name "widthSamples") (:type "int" :name "depthSamples") (:type "dReal" :name "scale") (:type "dReal" :name "offset") (:type "dReal" :name "thickness") (:type "int" :name "bWrap"))) (:return-type "void" :name "dGeomHeightfieldDataBuildDouble" :args ((:type "dHeightfieldDataID" :name "d") (:type (:pointer "double") :name "pHeightData") (:type "int" :name "bCopyHeightData") (:type "dReal" :name "width") (:type "dReal" :name "depth") (:type "int" :name "widthSamples") (:type "int" :name "depthSamples") (:type "dReal" :name "scale") (:type "dReal" :name "offset") (:type "dReal" :name "thickness") (:type "int" :name "bWrap"))) (:return-type "void" :name "dGeomHeightfieldDataSetBounds" :args ((:type "dHeightfieldDataID" :name "d") (:type "dReal" :name "minHeight") (:type "dReal" :name "maxHeight"))) (:return-type "void" :name "dGeomHeightfieldSetHeightfieldData" :args ((:type "dGeomID" :name "g") (:type "dHeightfieldDataID" :name "d"))) (:return-type "dHeightfieldDataID" :name "dGeomHeightfieldGetHeightfieldData" :args ((:type "dGeomID" :name "g"))) (:return-type "void" :name "dClosestLineSegmentPoints" :args ((:type "dVector3" :name "a1") (:type "dVector3" :name "a2") (:type "dVector3" :name "b1") (:type "dVector3" :name "b2") (:type "dVector3" :name "cp1") (:type "dVector3" :name "cp2"))) (:return-type "int" :name "dBoxTouchesBox" :args ((:type "dVector3" :name "_p1") (:type "dMatrix3" :name "R1") (:type "dVector3" :name "side1") (:type "dVector3" :name "_p2") (:type "dMatrix3" :name "R2") (:type "dVector3" :name "side2"))) (:return-type "int" :name "dBoxBox" :args ((:type "dVector3" :name "p1") (:type "dMatrix3" :name "R1") (:type "dVector3" :name "side1") (:type "dVector3" :name "p2") (:type "dMatrix3" :name "R2") (:type "dVector3" :name "side2") (:type "dVector3" :name "normal") (:type (:pointer "dReal") :name "depth") (:type (:pointer "int") :name "return_code") (:type "int" :name "flags") (:type (:pointer "dContactGeom") :name "contact") (:type "int" :name "skip"))) (:return-type "void" :name "dInfiniteAABB" :args ((:type "dGeomID" :name "geom") (:type (:pointer "dReal") :name "aabb"))) (:return-type "int" :name "dCreateGeomClass" :args ((:type (:pointer "dGeomClass") :name "classptr"))) (:return-type "void" :name "dSetColliderOverride" :args ((:type "int" :name "i") (:type "int" :name "j") (:type (:pointer "dColliderFn") :name "fn"))))) (:name "collision_space" :functions ((:return-type "dSpaceID" :name "dSimpleSpaceCreate" :args ((:type "dSpaceID" :name "space"))) (:return-type "dSpaceID" :name "dSweepAndPruneSpaceCreate" :args ((:type "dSpaceID" :name "space") (:type "int" :name "axisorder"))) (:return-type "void" :name "dSpaceDestroy" :args ((:type "dSpaceID"))) (:return-type "void" :name "dHashSpaceSetLevels" :args ((:type "dSpaceID" :name "space") (:type "int" :name "minlevel") (:type "int" :name "maxlevel"))) (:return-type "void" :name "dSpaceSetCleanup" :args ((:type "dSpaceID" :name "space") (:type "int" :name "mode"))) (:return-type "void" :name "dSpaceSetSublevel" :args ((:type "dSpaceID" :name "space") (:type "int" :name "sublevel"))) (:return-type "int" :name "dSpaceGetSublevel" :args ((:type "dSpaceID" :name "space"))) (:return-type "void" :name "dSpaceSetManualCleanup" :args ((:type "dSpaceID" :name "space") (:type "int" :name "mode"))) (:return-type "int" :name "dSpaceGetManualCleanup" :args ((:type "dSpaceID" :name "space"))) (:return-type "void" :name "dSpaceAdd" :args ((:type "dSpaceID") (:type "dGeomID"))) (:return-type "int" :name "dSpaceGetClass" :args ((:type "dSpaceID" :name "space"))))) (:name "collision_trimesh" :functions ((:return-type "dTriMeshDataID" :name "dGeomTriMeshDataCreate" :args nil) (:return-type "void" :name "dGeomTriMeshDataSet" :args ((:type "dTriMeshDataID" :name "g") (:type "int" :name "data_id") (:type (:pointer "void") :name "in_data"))) (:return-type "void" :name "dGeomTriMeshSetLastTransform" :args ((:type "dGeomID" :name "g") (:type "dMatrix4" :name "last_trans"))) (:return-type "void" :name "dGeomTriMeshDataBuildSingle" :args ((:type "dTriMeshDataID" :name "g") (:type (:pointer "void") :name "Vertices") (:type "int" :name "VertexStride") (:type "int" :name "VertexCount") (:type (:pointer "void") :name "Indices") (:type "int" :name "IndexCount") (:type "int" :name "TriStride"))) (:return-type "void" :name "dGeomTriMeshDataBuildSimple" :args ((:type "dTriMeshDataID" :name "g") (:type (:pointer "dReal") :name "Vertices") (:type "int" :name "VertexCount") (:type (:pointer "dTriIndex") :name "Indices") (:type "int" :name "IndexCount"))) (:return-type "void" :name "dGeomTriMeshDataPreprocess" :args ((:type "dTriMeshDataID" :name "g"))) (:return-type "void" :name "dGeomTriMeshSetCallback" :args ((:type "dGeomID" :name "g") (:type (:pointer "dTriCallback") :name "Callback"))) (:return-type "void" :name "dGeomTriMeshSetArrayCallback" :args ((:type "dGeomID" :name "g") (:type (:pointer "dTriArrayCallback") :name "ArrayCallback"))) (:return-type "void" :name "dGeomTriMeshSetRayCallback" :args ((:type "dGeomID" :name "g") (:type (:pointer "dTriRayCallback") :name "Callback"))) (:return-type "void" :name "dGeomTriMeshSetTriMergeCallback" :args ((:type "dGeomID" :name "g") (:type (:pointer "dTriTriMergeCallback") :name "Callback"))) (:return-type "dGeomID" :name "dCreateTriMesh" :args ((:type "dSpaceID" :name "space") (:type "dTriMeshDataID" :name "Data") (:type (:pointer "dTriCallback") :name "Callback") (:type (:pointer "dTriArrayCallback") :name "ArrayCallback") (:type (:pointer "dTriRayCallback") :name "RayCallback"))) (:return-type "void" :name "dGeomTriMeshSetData" :args ((:type "dGeomID" :name "g") (:type "dTriMeshDataID" :name "Data"))) (:return-type "void" :name "dGeomTriMeshEnableTC" :args ((:type "dGeomID" :name "g") (:type "int" :name "geomClass") (:type "int" :name "enable"))) (:return-type "void" :name "dGeomTriMeshClearTCCache" :args ((:type "dGeomID" :name "g"))) (:return-type "dTriMeshDataID" :name "dGeomTriMeshGetTriMeshDataID" :args ((:type "dGeomID" :name "g"))) (:return-type "void" :name "dGeomTriMeshGetTriangle" :args ((:type "dGeomID" :name "g") (:type "int" :name "Index") (:type (:pointer "dVector3") :name "v0") (:type (:pointer "dVector3") :name "v1") (:type (:pointer "dVector3") :name "v2"))) (:return-type "void" :name "dGeomTriMeshGetPoint" :args ((:type "dGeomID" :name "g") (:type "int" :name "Index") (:type "dReal" :name "u") (:type "dReal" :name "v") (:type "dVector3" :name "Out"))) (:return-type "int" :name "dGeomTriMeshGetTriangleCount" :args ((:type "dGeomID" :name "g"))) (:return-type "void" :name "dGeomTriMeshDataUpdate" :args ((:type "dTriMeshDataID" :name "g"))))) (:name "common" :functions ((:return-type :string :name "dGetConfiguration" :args nil) (:return-type "int" :name "dCheckConfiguration" :args ((:type :string :name "token"))))) (:name "compatibility" :functions nil) (:name "contact" :functions nil) (:name "error" :functions ((:return-type "void" :name "dSetErrorHandler" :args ((:type (:pointer "dMessageFunction") :name "fn"))) (:return-type (:pointer "dMessageFunction") :name "dGetErrorHandler" :args nil))) (:name "export-dif" :functions ((:return-type "void" :name "dWorldExportDIF" :args ((:type "dWorldID" :name "w") (:type (:pointer "FILE") :name "file") (:type :string :name "world_name"))))) (:name "mass" :functions ((:return-type "int" :name "dMassCheck" :args ((:type (:pointer "dMass") :name "m"))) (:return-type "void" :name "dMassSetZero" :args ((:type (:pointer "dMass") :name "arg1"))) (:return-type "void" :name "dMassSetParameters" :args ((:type (:pointer "dMass")) (:type "dReal" :name "themass") (:type "dReal" :name "cgx") (:type "dReal" :name "cgy") (:type "dReal" :name "cgz") (:type "dReal" :name "I11") (:type "dReal" :name "I22") (:type "dReal" :name "I33") (:type "dReal" :name "I12") (:type "dReal" :name "I13") (:type "dReal" :name "I23"))) (:return-type "void" :name "dMassSetSphere" :args ((:type (:pointer "dMass")) (:type "dReal" :name "density") (:type "dReal" :name "radius"))) (:return-type "void" :name "dMassSetCapsule" :args ((:type (:pointer "dMass")) (:type "dReal" :name "density") (:type "int" :name "direction") (:type "dReal" :name "radius") (:type "dReal" :name "length"))) (:return-type "void" :name "dMassSetCylinder" :args ((:type (:pointer "dMass")) (:type "dReal" :name "density") (:type "int" :name "direction") (:type "dReal" :name "radius") (:type "dReal" :name "length"))) (:return-type "void" :name "dMassSetBox" :args ((:type (:pointer "dMass")) (:type "dReal" :name "density") (:type "dReal" :name "lx") (:type "dReal" :name "ly") (:type "dReal" :name "lz"))) (:return-type "void" :name "dMassSetTrimesh" :args ((:type (:pointer "dMass")) (:type "dReal" :name "density") (:type "dGeomID" :name "g"))) (:return-type "void" :name "dMassSetTrimeshTotal" :args ((:type (:pointer "dMass") :name "m") (:type "dReal" :name "total_mass") (:type "dGeomID" :name "g"))) (:return-type "void" :name "dMassAdjust" :args ((:type (:pointer "dMass")) (:type "dReal" :name "newmass"))) (:return-type "void" :name "dMassTranslate" :args ((:type (:pointer "dMass")) (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dMassRotate" :args ((:type (:pointer "dMass")) (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dMassAdd" :args ((:type (:pointer "dMass") :name "a") (:type (:pointer "dMass") :name "b"))))) (:name "matrix" :functions ((:return-type "void" :name "dSetZero" :args ((:type (:pointer "dReal") :name "a") (:type "int" :name "n"))) (:return-type "dReal" :name "dDot" :args ((:type (:pointer "dReal") :name "a") (:type (:pointer "dReal") :name "b") (:type "int" :name "n"))) (:return-type "void" :name "dMultiply0" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "dReal") :name "B") (:type (:pointer "dReal") :name "C") (:type "int" :name "p") (:type "int" :name "q") (:type "int" :name "r"))) (:return-type "int" :name "dFactorCholesky" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n"))) (:return-type "void" :name "dSolveCholesky" :args ((:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "b") (:type "int" :name "n"))) (:return-type "int" :name "dInvertPDMatrix" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "dReal") :name "Ainv") (:type "int" :name "n"))) (:return-type "int" :name "dIsPositiveDefinite" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n"))) (:return-type "void" :name "dFactorLDLT" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "dReal") :name "d") (:type "int" :name "n") (:type "int" :name "nskip"))) (:return-type "void" :name "dSolveL1" :args ((:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "b") (:type "int" :name "n") (:type "int" :name "nskip"))) (:return-type "void" :name "dSolveL1T" :args ((:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "b") (:type "int" :name "n") (:type "int" :name "nskip"))) (:return-type "void" :name "dVectorScale" :args ((:type (:pointer "dReal") :name "a") (:type (:pointer "dReal") :name "d") (:type "int" :name "n"))) (:return-type "void" :name "dSolveLDLT" :args ((:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "d") (:type (:pointer "dReal") :name "b") (:type "int" :name "n") (:type "int" :name "nskip"))) (:return-type "void" :name "dLDLTAddTL" :args ((:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "d") (:type (:pointer "dReal") :name "a") (:type "int" :name "n") (:type "int" :name "nskip"))) (:return-type "void" :name "dLDLTRemove" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "int") :name "p") (:type (:pointer "dReal") :name "L") (:type (:pointer "dReal") :name "d") (:type "int" :name "n1") (:type "int" :name "n2") (:type "int" :name "r") (:type "int" :name "nskip"))) (:return-type "void" :name "dRemoveRowCol" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n") (:type "int" :name "nskip") (:type "int" :name "r"))))) (:name "memory" :functions ((:return-type "void" :name "dSetAllocHandler" :args ((:type (:pointer "dAllocFunction") :name "fn"))) (:return-type (:pointer "dAllocFunction") :name "dGetAllocHandler" :args nil) (:return-type (:pointer "void") :name "dAlloc" :args ((:type "size" :name "size"))))) (:name "misc" :functions ((:return-type "int" :name "dTestRand" :args nil) (:return-type "unsigned long" :name "dRand" :args nil) (:return-type "unsigned long" :name "dRandGetSeed" :args nil) (:return-type "int" :name "dRandInt" :args ((:type "int" :name "n"))) (:return-type "dReal" :name "dRandReal" :args nil) (:return-type "void" :name "dMakeRandomVector" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n") (:type "dReal" :name "range"))) (:return-type "void" :name "dMakeRandomMatrix" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n") (:type "int" :name "m") (:type "dReal" :name "range"))) (:return-type "void" :name "dClearUpperTriangle" :args ((:type (:pointer "dReal") :name "A") (:type "int" :name "n"))) (:return-type "dReal" :name "dMaxDifference" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "dReal") :name "B") (:type "int" :name "n") (:type "int" :name "m"))) (:return-type "dReal" :name "dMaxDifferenceLowerTriangle" :args ((:type (:pointer "dReal") :name "A") (:type (:pointer "dReal") :name "B") (:type "int" :name "n"))))) (:name "objects" :functions ((:return-type "dWorldID" :name "dWorldCreate" :args nil) (:return-type "void" :name "dWorldDestroy" :args ((:type "dWorldID" :name "world"))) (:return-type "void" :name "dWorldSetGravity" :args ((:type "dWorldID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dWorldGetGravity" :args ((:type "dWorldID") (:type "dVector3" :name "gravity"))) (:return-type "void" :name "dWorldSetERP" :args ((:type "dWorldID") (:type "dReal" :name "erp"))) (:return-type "dReal" :name "dWorldGetERP" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetCFM" :args ((:type "dWorldID") (:type "dReal" :name "cfm"))) (:return-type "dReal" :name "dWorldGetCFM" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetStepIslandsProcessingMaxThreadCount" :args ((:type "dWorldID" :name "w") (:type "unsigned" :name "count"))) (:return-type "void" :name "dWorldCleanupWorkingMemory" :args ((:type "dWorldID" :name "w"))) (:return-type "int" :name "dWorldSetStepMemoryManager" :args ((:type "dWorldID" :name "w") (:type (:pointer "dWorldStepMemoryFunctionsInfo") :name "memfuncs"))) (:return-type "void" :name "dWorldSetStepThreadingImplementation" :args ((:type "dWorldID" :name "w") (:type (:pointer "dThreadingFunctionsInfo") :name "functions_info") (:type "dThreadingImplementationID" :name "threading_impl"))) (:return-type "int" :name "dWorldStep" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "stepsize"))) (:return-type "int" :name "dWorldQuickStep" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "stepsize"))) (:return-type "void" :name "dWorldImpulseToForce" :args nil) (:return-type "void" :name "dWorldSetQuickStepNumIterations" :args ((:type "dWorldID") (:type "int" :name "num"))) (:return-type "int" :name "dWorldGetQuickStepNumIterations" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetQuickStepW" :args ((:type "dWorldID") (:type "dReal" :name "over_relaxation"))) (:return-type "dReal" :name "dWorldGetQuickStepW" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetContactMaxCorrectingVel" :args ((:type "dWorldID") (:type "dReal" :name "vel"))) (:return-type "dReal" :name "dWorldGetContactMaxCorrectingVel" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetContactSurfaceLayer" :args ((:type "dWorldID") (:type "dReal" :name "depth"))) (:return-type "dReal" :name "dWorldGetContactSurfaceLayer" :args ((:type "dWorldID"))) (:return-type "dReal" :name "dWorldGetAutoDisableLinearThreshold" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableLinearThreshold" :args ((:type "dWorldID") (:type "dReal" :name "linear_threshold"))) (:return-type "dReal" :name "dWorldGetAutoDisableAngularThreshold" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableAngularThreshold" :args ((:type "dWorldID") (:type "dReal" :name "angular_threshold"))) (:return-type "dReal" :name "dWorldGetAutoDisableLinearAverageThreshold" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableLinearAverageThreshold" :args ((:type "dWorldID") (:type "dReal" :name "linear_average_threshold"))) (:return-type "dReal" :name "dWorldGetAutoDisableAngularAverageThreshold" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableAngularAverageThreshold" :args ((:type "dWorldID") (:type "dReal" :name "angular_average_threshold"))) (:return-type "int" :name "dWorldGetAutoDisableAverageSamplesCount" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableAverageSamplesCount" :args ((:type "dWorldID") (:type "unsigned int" :name "average_samples_count"))) (:return-type "int" :name "dWorldGetAutoDisableSteps" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableSteps" :args ((:type "dWorldID") (:type "int" :name "steps"))) (:return-type "dReal" :name "dWorldGetAutoDisableTime" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableTime" :args ((:type "dWorldID") (:type "dReal" :name "time"))) (:return-type "int" :name "dWorldGetAutoDisableFlag" :args ((:type "dWorldID"))) (:return-type "void" :name "dWorldSetAutoDisableFlag" :args ((:type "dWorldID") (:type "int" :name "do_auto_disable"))) (:return-type "dReal" :name "dWorldGetLinearDampingThreshold" :args ((:type "dWorldID" :name "w"))) (:return-type "void" :name "dWorldSetLinearDampingThreshold" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "threshold"))) (:return-type "dReal" :name "dWorldGetAngularDampingThreshold" :args ((:type "dWorldID" :name "w"))) (:return-type "void" :name "dWorldSetAngularDampingThreshold" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "threshold"))) (:return-type "dReal" :name "dWorldGetLinearDamping" :args ((:type "dWorldID" :name "w"))) (:return-type "void" :name "dWorldSetLinearDamping" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "scale"))) (:return-type "dReal" :name "dWorldGetAngularDamping" :args ((:type "dWorldID" :name "w"))) (:return-type "void" :name "dWorldSetAngularDamping" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "scale"))) (:return-type "void" :name "dWorldSetDamping" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "linear_scale") (:type "dReal" :name "angular_scale"))) (:return-type "dReal" :name "dWorldGetMaxAngularSpeed" :args ((:type "dWorldID" :name "w"))) (:return-type "void" :name "dWorldSetMaxAngularSpeed" :args ((:type "dWorldID" :name "w") (:type "dReal" :name "max_speed"))) (:return-type "dReal" :name "dBodyGetAutoDisableLinearThreshold" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableLinearThreshold" :args ((:type "dBodyID") (:type "dReal" :name "linear_average_threshold"))) (:return-type "dReal" :name "dBodyGetAutoDisableAngularThreshold" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableAngularThreshold" :args ((:type "dBodyID") (:type "dReal" :name "angular_average_threshold"))) (:return-type "int" :name "dBodyGetAutoDisableAverageSamplesCount" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableAverageSamplesCount" :args ((:type "dBodyID") (:type "unsigned int" :name "average_samples_count"))) (:return-type "int" :name "dBodyGetAutoDisableSteps" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableSteps" :args ((:type "dBodyID") (:type "int" :name "steps"))) (:return-type "dReal" :name "dBodyGetAutoDisableTime" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableTime" :args ((:type "dBodyID") (:type "dReal" :name "time"))) (:return-type "int" :name "dBodyGetAutoDisableFlag" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetAutoDisableFlag" :args ((:type "dBodyID") (:type "int" :name "do_auto_disable"))) (:return-type "void" :name "dBodySetAutoDisableDefaults" :args ((:type "dBodyID"))) (:return-type "dWorldID" :name "dBodyGetWorld" :args ((:type "dBodyID"))) (:return-type "dBodyID" :name "dBodyCreate" :args ((:type "dWorldID"))) (:return-type "void" :name "dBodyDestroy" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetData" :args ((:type "dBodyID") (:type (:pointer "void") :name "data"))) (:return-type (:pointer "void") :name "dBodyGetData" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetPosition" :args ((:type "dBodyID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dBodySetRotation" :args ((:type "dBodyID") (:type "dMatrix3" :name "R"))) (:return-type "void" :name "dBodySetQuaternion" :args ((:type "dBodyID") (:type "dQuaternion" :name "q"))) (:return-type "void" :name "dBodySetLinearVel" :args ((:type "dBodyID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dBodySetAngularVel" :args ((:type "dBodyID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type (:pointer "dReal") :name "dBodyGetPosition" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyCopyPosition" :args ((:type "dBodyID" :name "body") (:type "dVector3" :name "pos"))) (:return-type (:pointer "dReal") :name "dBodyGetRotation" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyCopyRotation" :args ((:type "dBodyID") (:type "dMatrix3" :name "R"))) (:return-type (:pointer "dReal") :name "dBodyGetQuaternion" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyCopyQuaternion" :args ((:type "dBodyID" :name "body") (:type "dQuaternion" :name "quat"))) (:return-type (:pointer "dReal") :name "dBodyGetLinearVel" :args ((:type "dBodyID"))) (:return-type (:pointer "dReal") :name "dBodyGetAngularVel" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetMass" :args ((:type "dBodyID") (:type (:pointer "dMass") :name "mass"))) (:return-type "void" :name "dBodyGetMass" :args ((:type "dBodyID") (:type (:pointer "dMass") :name "mass"))) (:return-type "void" :name "dBodyAddForce" :args ((:type "dBodyID") (:type "dReal" :name "fx") (:type "dReal" :name "fy") (:type "dReal" :name "fz"))) (:return-type "void" :name "dBodyAddTorque" :args ((:type "dBodyID") (:type "dReal" :name "fx") (:type "dReal" :name "fy") (:type "dReal" :name "fz"))) (:return-type "void" :name "dBodyAddRelForce" :args ((:type "dBodyID") (:type "dReal" :name "fx") (:type "dReal" :name "fy") (:type "dReal" :name "fz"))) (:return-type "void" :name "dBodyAddRelTorque" :args ((:type "dBodyID") (:type "dReal" :name "fx") (:type "dReal" :name "fy") (:type "dReal" :name "fz"))) (:return-type "void" :name "dBodyAddForceAtPos" :args ((:type "dBodyID") (:type "dReal" :name "fx") (:type "dReal" :name "fy") (:type "dReal" :name "fz") (:type "dReal" :name "px") (:type "dReal" :name "py") (:type "dReal" :name "pz"))) (:return-type (:pointer "dReal") :name "dBodyGetForce" :args ((:type "dBodyID"))) (:return-type (:pointer "dReal") :name "dBodyGetTorque" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetForce" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dBodySetTorque" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dBodyGetRelPointPos" :args nil) (:return-type "void" :name "dBodyGetRelPointVel" :args nil) (:return-type "void" :name "dBodyGetPointVel" :args nil) (:return-type "void" :name "dBodyGetPosRelPoint" :args nil) (:return-type "void" :name "dBodyVectorToWorld" :args nil) (:return-type "void" :name "dBodyVectorFromWorld" :args nil) (:return-type "void" :name "dBodySetFiniteRotationMode" :args ((:type "dBodyID") (:type "int" :name "mode"))) (:return-type "void" :name "dBodySetFiniteRotationAxis" :args ((:type "dBodyID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "int" :name "dBodyGetFiniteRotationMode" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyGetFiniteRotationAxis" :args ((:type "dBodyID") (:type "dVector3" :name "result"))) (:return-type "int" :name "dBodyGetNumJoints" :args ((:type "dBodyID" :name "b"))) (:return-type "dJointID" :name "dBodyGetJoint" :args ((:type "dBodyID") (:type "int" :name "index"))) (:return-type "void" :name "dBodySetDynamic" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetKinematic" :args ((:type "dBodyID"))) (:return-type "int" :name "dBodyIsKinematic" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyEnable" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodyDisable" :args ((:type "dBodyID"))) (:return-type "int" :name "dBodyIsEnabled" :args ((:type "dBodyID"))) (:return-type "void" :name "dBodySetGravityMode" :args ((:type "dBodyID" :name "b") (:type "int" :name "mode"))) (:return-type "int" :name "dBodyGetGravityMode" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetMovedCallback" :args ((:type "dBodyID" :name "b") (:type (:pointer "void") :name "callback"))) (:return-type "dGeomID" :name "dBodyGetFirstGeom" :args ((:type "dBodyID" :name "b"))) (:return-type "dGeomID" :name "dBodyGetNextGeom" :args ((:type "dGeomID" :name "g"))) (:return-type "void" :name "dBodySetDampingDefaults" :args ((:type "dBodyID" :name "b"))) (:return-type "dReal" :name "dBodyGetLinearDamping" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetLinearDamping" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "scale"))) (:return-type "dReal" :name "dBodyGetAngularDamping" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetAngularDamping" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "scale"))) (:return-type "void" :name "dBodySetDamping" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "linear_scale") (:type "dReal" :name "angular_scale"))) (:return-type "dReal" :name "dBodyGetLinearDampingThreshold" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetLinearDampingThreshold" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "threshold"))) (:return-type "dReal" :name "dBodyGetAngularDampingThreshold" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetAngularDampingThreshold" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "threshold"))) (:return-type "dReal" :name "dBodyGetMaxAngularSpeed" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetMaxAngularSpeed" :args ((:type "dBodyID" :name "b") (:type "dReal" :name "max_speed"))) (:return-type "int" :name "dBodyGetGyroscopicMode" :args ((:type "dBodyID" :name "b"))) (:return-type "void" :name "dBodySetGyroscopicMode" :args ((:type "dBodyID" :name "b") (:type "int" :name "enabled"))) (:return-type "dJointID" :name "dJointCreateBall" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateHinge" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateSlider" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateContact" :args ((:type "dWorldID") (:type "dJointGroupID") (:type (:pointer "dContact")))) (:return-type "dJointID" :name "dJointCreateHinge2" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateUniversal" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreatePR" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreatePU" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreatePiston" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateFixed" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateNull" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateAMotor" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateLMotor" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreatePlane2D" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateDBall" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateDHinge" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "dJointID" :name "dJointCreateTransmission" :args ((:type "dWorldID") (:type "dJointGroupID"))) (:return-type "void" :name "dJointDestroy" :args ((:type "dJointID"))) (:return-type "dJointGroupID" :name "dJointGroupCreate" :args ((:type "int" :name "max_size"))) (:return-type "void" :name "dJointGroupDestroy" :args ((:type "dJointGroupID"))) (:return-type "void" :name "dJointGroupEmpty" :args ((:type "dJointGroupID"))) (:return-type "int" :name "dJointGetNumBodies" :args ((:type "dJointID"))) (:return-type "void" :name "dJointAttach" :args ((:type "dJointID") (:type "dBodyID" :name "body1") (:type "dBodyID" :name "body2"))) (:return-type "void" :name "dJointEnable" :args ((:type "dJointID"))) (:return-type "void" :name "dJointDisable" :args ((:type "dJointID"))) (:return-type "int" :name "dJointIsEnabled" :args ((:type "dJointID"))) (:return-type "void" :name "dJointSetData" :args ((:type "dJointID") (:type (:pointer "void") :name "data"))) (:return-type (:pointer "void") :name "dJointGetData" :args ((:type "dJointID"))) (:return-type "dJointType" :name "dJointGetType" :args ((:type "dJointID"))) (:return-type "dBodyID" :name "dJointGetBody" :args ((:type "dJointID") (:type "int" :name "index"))) (:return-type "void" :name "dJointSetFeedback" :args ((:type "dJointID") (:type (:pointer "dJointFeedback")))) (:return-type (:pointer "dJointFeedback") :name "dJointGetFeedback" :args ((:type "dJointID"))) (:return-type "void" :name "dJointSetBallAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetBallAnchor2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetBallParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetHingeAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetHingeAnchorDelta" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az"))) (:return-type "void" :name "dJointSetHingeAxis" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetHingeAxisOffset" :args ((:type "dJointID" :name "j") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "angle"))) (:return-type "void" :name "dJointSetHingeParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddHingeTorque" :args ((:type "dJointID" :name "joint") (:type "dReal" :name "torque"))) (:return-type "void" :name "dJointSetSliderAxis" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetSliderAxisDelta" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az"))) (:return-type "void" :name "dJointSetSliderParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddSliderForce" :args ((:type "dJointID" :name "joint") (:type "dReal" :name "force"))) (:return-type "void" :name "dJointSetHinge2Anchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetHinge2Axis1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetHinge2Axis2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetHinge2Param" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddHinge2Torques" :args ((:type "dJointID" :name "joint") (:type "dReal" :name "torque1") (:type "dReal" :name "torque2"))) (:return-type "void" :name "dJointSetUniversalAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetUniversalAxis1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetUniversalAxis1Offset" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "offset1") (:type "dReal" :name "offset2"))) (:return-type "void" :name "dJointSetUniversalAxis2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetUniversalAxis2Offset" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "offset1") (:type "dReal" :name "offset2"))) (:return-type "void" :name "dJointSetUniversalParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddUniversalTorques" :args ((:type "dJointID" :name "joint") (:type "dReal" :name "torque1") (:type "dReal" :name "torque2"))) (:return-type "void" :name "dJointSetPRAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPRAxis1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPRAxis2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPRParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddPRTorque" :args ((:type "dJointID" :name "j") (:type "dReal" :name "torque"))) (:return-type "void" :name "dJointSetPUAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPUAnchorOffset" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "dx") (:type "dReal" :name "dy") (:type "dReal" :name "dz"))) (:return-type "void" :name "dJointSetPUAxis1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPUAxis2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPUAxis3" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPUAxisP" :args ((:type "dJointID" :name "id") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPUParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddPUTorque" :args ((:type "dJointID" :name "j") (:type "dReal" :name "torque"))) (:return-type "void" :name "dJointSetPistonAnchor" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPistonAnchorOffset" :args ((:type "dJointID" :name "j") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z") (:type "dReal" :name "dx") (:type "dReal" :name "dy") (:type "dReal" :name "dz"))) (:return-type "void" :name "dJointSetPistonAxis" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetPistonParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointAddPistonForce" :args ((:type "dJointID" :name "joint") (:type "dReal" :name "force"))) (:return-type "void" :name "dJointSetFixed" :args ((:type "dJointID"))) (:return-type "void" :name "dJointSetFixedParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetAMotorNumAxes" :args ((:type "dJointID") (:type "int" :name "num"))) (:return-type "void" :name "dJointSetAMotorAxis" :args ((:type "dJointID") (:type "int" :name "anum") (:type "int" :name "rel") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetAMotorAngle" :args ((:type "dJointID") (:type "int" :name "anum") (:type "dReal" :name "angle"))) (:return-type "void" :name "dJointSetAMotorParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetAMotorMode" :args ((:type "dJointID") (:type "int" :name "mode"))) (:return-type "void" :name "dJointAddAMotorTorques" :args ((:type "dJointID") (:type "dReal" :name "torque1") (:type "dReal" :name "torque2") (:type "dReal" :name "torque3"))) (:return-type "void" :name "dJointSetLMotorNumAxes" :args ((:type "dJointID") (:type "int" :name "num"))) (:return-type "void" :name "dJointSetLMotorAxis" :args ((:type "dJointID") (:type "int" :name "anum") (:type "int" :name "rel") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetLMotorParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetPlane2DXParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetPlane2DYParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointSetPlane2DAngleParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "void" :name "dJointGetBallAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetBallAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetBallParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointGetHingeAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetHingeAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetHingeAxis" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetHingeParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "dReal" :name "dJointGetHingeAngle" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetHingeAngleRate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetSliderPosition" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetSliderPositionRate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetSliderAxis" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetSliderParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointGetHinge2Anchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetHinge2Anchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetHinge2Axis1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetHinge2Axis2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetHinge2Param" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "dReal" :name "dJointGetHinge2Angle1" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetHinge2Angle1Rate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetHinge2Angle2Rate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetUniversalAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetUniversalAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetUniversalAxis1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetUniversalAxis2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetUniversalParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointGetUniversalAngles" :args ((:type "dJointID") (:type (:pointer "dReal") :name "angle1") (:type (:pointer "dReal") :name "angle2"))) (:return-type "dReal" :name "dJointGetUniversalAngle1" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetUniversalAngle2" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetUniversalAngle1Rate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetUniversalAngle2Rate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetPRAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetPRPosition" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPRPositionRate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPRAngle" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPRAngleRate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetPRAxis1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPRAxis2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetPRParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointGetPUAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetPUPosition" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPUPositionRate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetPUAxis1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPUAxis2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPUAxis3" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPUAxisP" :args ((:type "dJointID" :name "id") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPUAngles" :args ((:type "dJointID") (:type (:pointer "dReal") :name "angle1") (:type (:pointer "dReal") :name "angle2"))) (:return-type "dReal" :name "dJointGetPUAngle1" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPUAngle1Rate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPUAngle2" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPUAngle2Rate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPUParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "dReal" :name "dJointGetPistonPosition" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPistonPositionRate" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPistonAngle" :args ((:type "dJointID"))) (:return-type "dReal" :name "dJointGetPistonAngleRate" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetPistonAnchor" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPistonAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetPistonAxis" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetPistonParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "int" :name "dJointGetAMotorNumAxes" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetAMotorAxis" :args ((:type "dJointID") (:type "int" :name "anum") (:type "dVector3" :name "result"))) (:return-type "int" :name "dJointGetAMotorAxisRel" :args ((:type "dJointID") (:type "int" :name "anum"))) (:return-type "dReal" :name "dJointGetAMotorAngle" :args ((:type "dJointID") (:type "int" :name "anum"))) (:return-type "dReal" :name "dJointGetAMotorAngleRate" :args ((:type "dJointID") (:type "int" :name "anum"))) (:return-type "dReal" :name "dJointGetAMotorParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "int" :name "dJointGetAMotorMode" :args ((:type "dJointID"))) (:return-type "int" :name "dJointGetLMotorNumAxes" :args ((:type "dJointID"))) (:return-type "void" :name "dJointGetLMotorAxis" :args ((:type "dJointID") (:type "int" :name "anum") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetLMotorParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "dReal" :name "dJointGetFixedParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointGetTransmissionContactPoint1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetTransmissionContactPoint2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetTransmissionAxis1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetTransmissionAxis2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetTransmissionAnchor1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetTransmissionAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointSetTransmissionParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "dReal" :name "dJointGetTransmissionParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointSetTransmissionMode" :args ((:type "dJointID" :name "j") (:type "int" :name "mode"))) (:return-type "int" :name "dJointGetTransmissionMode" :args ((:type "dJointID" :name "j"))) (:return-type "void" :name "dJointSetTransmissionRatio" :args ((:type "dJointID" :name "j") (:type "dReal" :name "ratio"))) (:return-type "dReal" :name "dJointGetTransmissionRatio" :args ((:type "dJointID" :name "j"))) (:return-type "void" :name "dJointSetTransmissionAxis" :args ((:type "dJointID" :name "j") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointGetTransmissionAxis" :args ((:type "dJointID" :name "j") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetTransmissionAngle1" :args ((:type "dJointID" :name "j"))) (:return-type "dReal" :name "dJointGetTransmissionAngle2" :args ((:type "dJointID" :name "j"))) (:return-type "dReal" :name "dJointGetTransmissionRadius1" :args ((:type "dJointID" :name "j"))) (:return-type "dReal" :name "dJointGetTransmissionRadius2" :args ((:type "dJointID" :name "j"))) (:return-type "void" :name "dJointSetTransmissionRadius1" :args ((:type "dJointID" :name "j") (:type "dReal" :name "radius"))) (:return-type "void" :name "dJointSetTransmissionRadius2" :args ((:type "dJointID" :name "j") (:type "dReal" :name "radius"))) (:return-type "dReal" :name "dJointGetTransmissionBacklash" :args ((:type "dJointID" :name "j"))) (:return-type "void" :name "dJointSetTransmissionBacklash" :args ((:type "dJointID" :name "j") (:type "dReal" :name "backlash"))) (:return-type "void" :name "dJointSetDBallAnchor1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetDBallAnchor2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointGetDBallAnchor1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetDBallAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetDBallDistance" :args ((:type "dJointID"))) (:return-type "void" :name "dJointSetDBallParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "dReal" :name "dJointGetDBallParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "void" :name "dJointSetDHingeAxis" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointGetDHingeAxis" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointSetDHingeAnchor1" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointSetDHingeAnchor2" :args ((:type "dJointID") (:type "dReal" :name "x") (:type "dReal" :name "y") (:type "dReal" :name "z"))) (:return-type "void" :name "dJointGetDHingeAnchor1" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "void" :name "dJointGetDHingeAnchor2" :args ((:type "dJointID") (:type "dVector3" :name "result"))) (:return-type "dReal" :name "dJointGetDHingeDistance" :args ((:type "dJointID"))) (:return-type "void" :name "dJointSetDHingeParam" :args ((:type "dJointID") (:type "int" :name "parameter") (:type "dReal" :name "value"))) (:return-type "dReal" :name "dJointGetDHingeParam" :args ((:type "dJointID") (:type "int" :name "parameter"))) (:return-type "dJointID" :name "dConnectingJoint" :args ((:type "dBodyID") (:type "dBodyID"))) (:return-type "int" :name "dConnectingJointList" :args ((:type "dBodyID") (:type "dBodyID") (:type (:pointer "dJointID")))) (:return-type "int" :name "dAreConnected" :args ((:type "dBodyID") (:type "dBodyID"))) (:return-type "int" :name "dAreConnectedExcluding" :args ((:type "dBodyID" :name "body1") (:type "dBodyID" :name "body2") (:type "int" :name "joint_type"))))) (:name "ode" :functions nil) (:name "odeconfig" :functions nil) (:name "odecpp" :functions nil) (:name "odecpp_collision" :functions nil) (:name "odeinit" :functions ((:return-type "void" :name "dInitODE" :args nil) (:return-type "int" :name "dInitODE2" :args ((:type "unsigned int" :name "uiInitFlags"))) (:return-type "int" :name "dAllocateODEDataForThread" :args ((:type "unsigned int" :name "uiAllocateFlags"))) (:return-type "void" :name "dCleanupODEAllDataForThread" :args nil) (:return-type "void" :name "dCloseODE" :args nil))) (:name "odemath" :functions ((:return-type "int" :name "dSafeNormalize3" :args ((:type "dVector3" :name "a"))) (:return-type "void" :name "dPlaneSpace" :args ((:type "dVector3" :name "n") (:type "dVector3" :name "p") (:type "dVector3" :name "q"))))) (:name "precision" :functions nil) (:name "rotation" :functions ((:return-type "void" :name "dRSetIdentity" :args ((:type "dMatrix3" :name "R"))) (:return-type "void" :name "dRFromAxisAndAngle" :args ((:type "dMatrix3" :name "R") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az") (:type "dReal" :name "angle"))) (:return-type "void" :name "dRFromEulerAngles" :args ((:type "dMatrix3" :name "R") (:type "dReal" :name "phi") (:type "dReal" :name "theta") (:type "dReal" :name "psi"))) (:return-type "void" :name "dRFrom2Axes" :args ((:type "dMatrix3" :name "R") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az") (:type "dReal" :name "bx") (:type "dReal" :name "by") (:type "dReal" :name "bz"))) (:return-type "void" :name "dRFromZAxis" :args ((:type "dMatrix3" :name "R") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az"))) (:return-type "void" :name "dQSetIdentity" :args ((:type "dQuaternion" :name "q"))) (:return-type "void" :name "dQFromAxisAndAngle" :args ((:type "dQuaternion" :name "q") (:type "dReal" :name "ax") (:type "dReal" :name "ay") (:type "dReal" :name "az") (:type "dReal" :name "angle"))) (:return-type "void" :name "dQMultiply0" :args ((:type "dQuaternion" :name "qa") (:type "dQuaternion" :name "qb") (:type "dQuaternion" :name "qc"))) (:return-type "void" :name "dRfromQ" :args ((:type "dMatrix3" :name "R") (:type "dQuaternion" :name "q"))))) (:name "timer" :functions ((:return-type "void" :name "dStopwatchReset" :args ((:type (:pointer "dStopwatch") :name "arg1"))) (:return-type "void" :name "dTimerStart" :args ((:type :string :name "description"))) (:return-type "void" :name "dTimerReport" :args ((:type (:pointer "FILE") :name "fout") (:type "int" :name "average"))) (:return-type "double" :name "dTimerTicksPerSecond" :args nil) (:return-type "double" :name "dTimerResolution" :args nil))))
